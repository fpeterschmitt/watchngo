// Code generated by "stringer -type=Notification -trimprefix=Notification"; DO NOT EDIT.

package pkg

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NotificationRemove-1]
	_ = x[NotificationCreate-2]
	_ = x[NotificationWrite-4]
	_ = x[NotificationRename-8]
	_ = x[NotificationChmod-16]
	_ = x[NotificationError-32]
}

const (
	_Notification_name_0 = "RemoveCreate"
	_Notification_name_1 = "Write"
	_Notification_name_2 = "Rename"
	_Notification_name_3 = "Chmod"
	_Notification_name_4 = "Error"
)

var (
	_Notification_index_0 = [...]uint8{0, 6, 12}
)

func (i Notification) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _Notification_name_0[_Notification_index_0[i]:_Notification_index_0[i+1]]
	case i == 4:
		return _Notification_name_1
	case i == 8:
		return _Notification_name_2
	case i == 16:
		return _Notification_name_3
	case i == 32:
		return _Notification_name_4
	default:
		return "Notification(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
