; Here are the global variables
;debug = false
;silent = false

; Per watcher configuration
;[watcher name]
;match = file, directory path or shell-like glob match. if you use a filter, a directory is mandatory. defaults to "."
;command = shell command to run
;debug = optional boolean (true|false)
;silent = optional boolean (true|false)
;filter = optional regexp: https://golang.org/pkg/regexp/syntax

; Command variables
;
; %event.file -> the file that triggered the event
; %event.op -> the event operation

[one file]
match = pkg/watcher.go
command = cat %event.file

[watchngo]
command = go vet ./... && echo go vet OK

[regexp filter]
filter = .*\.go
command = echo %event.file

[stdout]
; use a read loop from your shell to use this.
; using silent = true globally may help as well.
filter = .*\.go
command = %event.file
executor = stdout
